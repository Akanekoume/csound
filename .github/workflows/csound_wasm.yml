name: csound_wasm
on:
  push:
    branches:
      - feature/webaudio-csound
jobs:
  csound-wasm:
    env:
      wasm_bin_dir: ./wasm
    name: csound-wasm binaries compilation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v8
      with:
        name: csound
        authToken: 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjJDIzMTgiLCJqdGkiOiJhNDQzZmMwMi1mMDBjLTQzNDUtYjA3YS1jYzJjYjIzYjE2OTAiLCJzY29wZXMiOiJjYWNoZSJ9.UOQEV1Hd1ZEQdNF1STxbt0wcCrIrihsv4KThD_wHk3E'
    - name: Compile wasm binaries
      run: cd $wasm_bin_dir && bash compile.sh
    - name: Archive Wasm Artifacts
      uses: actions/upload-artifact@master
      with:
        name: lib
        path: lib.zip
  browser-test:
    env:
      wasm_bin_dir: ./wasm
      wasm_browser_dir: ./wasm/browser
    name: Browser bundle build and test
    needs: csound-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: lib
      - name: Uncompress freshly compiled wasm artifacts
        run: |
          nix-env -iA unzip
          unzip ./lib.zip -d $wasm_bin_dir
      - name: Build the production js module bundle
        run: |
          cd &wasm_browser_dir
          yarn build:prod
      - name: Run the unit-tests
        run : |
          nix-env -iA chromedriver selenium-server-standalone
          yarn test:ci
